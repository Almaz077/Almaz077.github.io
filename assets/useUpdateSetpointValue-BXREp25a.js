import{r as S}from"./index-Be2Hz3rG.js";import{c as F}from"./shallow-Bm4ufq9Z.js";const m=F((t,e)=>({setpointsValues:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],setpointOffsets:{bool:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],int:[16,20,24,28,32,36,40,44,48,52,56,60,64,68,72,76],float:[80,84,88,92,96,100,104,108,112,116,120,124,128,132,136,140],analog:[]},setSetpoints(n){t({setpointsValues:[...n]})},setSetpointOffsets(n,o){t({setpointOffsets:{...e().setpointOffsets,[o]:[...n]}})}})),V=t=>/^-?\d*$/.test(t),N=t=>/^-?\d*[.,]?\d*$/.test(t),g=t=>{const{setpointsValues:e}=m.getState();return[...e.slice(t,t+4)]},I=t=>{const[e,n]=m(r=>[r.setpointsValues,r.setSetpoints]);return console.log(e),{inputsValue:g(t),handleFourierGarmonicForOutput:(r,c)=>{if(V(c)){const a=Number(c);if(!Number.isNaN(a)&&a>=0&&a<=19){const w=[...e];w[t+r]=a,n(w)}}}}};function b(t){const e=new Uint8Array(4);return e[3]=t>>24&255,e[2]=t>>16&255,e[1]=t>>8&255,e[0]=t&255,e}function d(t){const e=new ArrayBuffer(4);return new DataView(e).setFloat32(0,t),new Uint8Array(e)}function O(t){if(t.length!==4)throw new Error("Массив должен содержать ровно 4 байта");const e=new ArrayBuffer(4),n=new DataView(e);return t.forEach((o,u)=>{n.setUint8(u,o)}),n.getFloat32(0)}function B(t){if(t.length!==4)throw new Error("Массив должен содержать ровно 4 байта");return t[3]<<24|t[2]<<16|t[1]<<8|t[0]}const k=(t,e)=>{const{setpointsValues:n}=m.getState();let o=0;return t==="int"&&(o=B([...n.slice(e,e+4)])),t==="float"&&(o=O([...n.slice(e,e+4)])),t==="bool"&&(o=n[e]),o},v=(t,e)=>{const n=k(t,e),[o,u]=S.useState(typeof n=="number"?String(n):""),[r,c]=m(i=>[i.setpointsValues,i.setSetpoints]),a=i=>{const s=[...r];s.splice(e,4,...i),c(s)};return{handleChange:i=>{let s=i.target.value;switch(t){case"int":if(V(s)){const f=Number(s);Number.isNaN(f)||(a(b(f)),u(s))}break;case"float":if(N(s)){s=s.replace(",",".");const f=Number(s);Number.isNaN(f)||(a(d(f)),u(s))}break;case"bool":const p=i.target.checked?1:0,h=[...r];h[e]=p,c(h),u(String(p));break}},inputValue:o,handleFourierGarmonicForOutput:(i,s)=>{if(V(s)){const l=Number(s);if(!Number.isNaN(l)&&l>=1&&l<=3){const p=[...r];p[i]=l,c(p),u(s)}}}}};export{I as a,v as b,m as u};
